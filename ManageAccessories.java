
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.time.Duration;
import java.time.Instant;
import java.util.Arrays;
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sagar
 */
public class ManageAccessories extends javax.swing.JFrame {

    CAD_Info info = new CAD_Info();
    String imgPath = null;
    int fileToOpen;

    /**
     * Creates new form ManageAccessories
     */
    public ManageAccessories() {
        super("Main Frame");

        initComponents();

        price_label.setVisible(false);
        id_label2.setVisible(false);
        //calling the method to fill the table from the server datas.
        info.fillAccessoryJTable(table, "");
        table.setRowHeight(35);
        this.setLocationRelativeTo(null);
        setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel24 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        category1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        low = new javax.swing.JRadioButton();
        medium = new javax.swing.JRadioButton();
        high = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        desc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        label_image = new javax.swing.JLabel();
        chooseImage = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        an1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        price_label = new javax.swing.JLabel();
        an2 = new javax.swing.JTextField();
        id_label1 = new javax.swing.JLabel();
        id_label2 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        searchPrice = new javax.swing.JTextField();
        category123 = new javax.swing.JComboBox<>();
        searchByPriceButton = new javax.swing.JButton();
        searchByCategoryButton = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        clearAll = new javax.swing.JButton();
        load = new javax.swing.JButton();
        openRecieptButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        open = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        aboutUsMenuItem = new javax.swing.JMenuItem();
        helpContent = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 153));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                                                             Manage Accessories");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255))));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 37));

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CAR ACCESSORIES DETAILS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 17))); // NOI18N
        jPanel3.setForeground(java.awt.Color.red);
        jPanel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        table.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "ItemName", "Category", "Range", "Adddate", "price", "description"
            }
        ));
        table.setGridColor(java.awt.Color.red);
        table.setName(""); // NOI18N
        table.setShowGrid(true);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(50);
            table.getColumnModel().getColumn(6).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 583, -1));

        jPanel4.setBackground(new java.awt.Color(89, 233, 176));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 198, 167)), "EDIT | DELETE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 13))); // NOI18N
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Id :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Accessory Name :");

        date.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Category :");

        category1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        category1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comfort", "Ambience", "Media" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Range :");

        buttonGroup1.add(low);
        low.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        low.setLabel("Low");

        buttonGroup1.add(medium);
        medium.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        medium.setLabel("Medium");
        medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumActionPerformed(evt);
            }
        });

        buttonGroup1.add(high);
        high.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        high.setLabel("High");
        high.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Price :");

        price.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });

        desc.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        desc.setScrollOffset(1);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Description :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Image :");

        label_image.setBackground(new java.awt.Color(204, 255, 204));
        label_image.setOpaque(true);

        chooseImage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chooseImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-add-image-22.png"))); // NOI18N
        chooseImage.setText("Choose Image");
        chooseImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseImageMouseClicked(evt);
            }
        });
        chooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-add-22 (1).png"))); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-edit-22.png"))); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        remove.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-remove-22.png"))); // NOI18N
        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        an1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Add Date :");

        price_label.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        price_label.setForeground(new java.awt.Color(255, 0, 0));
        price_label.setText("* price should be on integer ");

        an2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        an2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                an2KeyTyped(evt);
            }
        });

        id_label1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        id_label1.setForeground(new java.awt.Color(255, 0, 0));
        id_label1.setText("* id should be on integer ");

        id_label2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        id_label2.setForeground(new java.awt.Color(255, 0, 0));
        id_label2.setText("* id should be on integer ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addButton)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id_label2)
                    .addComponent(chooseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price_label)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(remove))
                    .addComponent(category1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(low, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(medium))
                            .addComponent(an2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(high, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_image, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(an1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(124, 124, 124)
                    .addComponent(id_label1)
                    .addContainerGap(124, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(an2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(id_label2)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(an1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(category1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(low)
                            .addComponent(medium)
                            .addComponent(high)
                            .addComponent(jLabel4))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(desc, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addComponent(label_image, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(75, 75, 75)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remove, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(262, 262, 262)
                    .addComponent(id_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(273, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 570));

        jPanel22.setBackground(new java.awt.Color(89, 233, 176));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Panel", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 13))); // NOI18N

        jPanel23.setBackground(new java.awt.Color(0, 153, 153));
        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel34.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel34.setText("Price :");

        jLabel35.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel35.setText("Category :");

        searchPrice.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        searchPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPriceActionPerformed(evt);
            }
        });
        searchPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchPriceKeyTyped(evt);
            }
        });

        category123.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        category123.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comfort", "Ambience", "Media" }));

        searchByPriceButton.setBackground(new java.awt.Color(153, 204, 255));
        searchByPriceButton.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        searchByPriceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-search-22.png"))); // NOI18N
        searchByPriceButton.setText("Search by Price");
        searchByPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceButtonActionPerformed(evt);
            }
        });

        searchByCategoryButton.setBackground(new java.awt.Color(153, 204, 255));
        searchByCategoryButton.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        searchByCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-search-22.png"))); // NOI18N
        searchByCategoryButton.setText("Search by Category");
        searchByCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCategoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(category123, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchByCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByPriceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchByPriceButton))
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category123, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(searchByCategoryButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 580, 580, 120));

        jPanel25.setBackground(new java.awt.Color(0, 153, 153));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Panel", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 13))); // NOI18N

        clearAll.setBackground(new java.awt.Color(153, 204, 255));
        clearAll.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        clearAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear all.png"))); // NOI18N
        clearAll.setText("Clear All");
        clearAll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        clearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllActionPerformed(evt);
            }
        });

        load.setBackground(new java.awt.Color(153, 204, 255));
        load.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        load.setText("Load Data");
        load.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        openRecieptButton.setBackground(new java.awt.Color(153, 204, 255));
        openRecieptButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        openRecieptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reciept.png"))); // NOI18N
        openRecieptButton.setText("Open Reciept");
        openRecieptButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        openRecieptButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openRecieptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openRecieptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(openRecieptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openRecieptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 616, 410, 80));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Main.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 710));

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jMenu1.setOpaque(true);
        jMenu1.setPreferredSize(new java.awt.Dimension(30, 25));

        homeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        homeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-home-22 (1).png"))); // NOI18N
        homeMenuItem.setText("    Home");
        homeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(homeMenuItem);

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-open-view-22.png"))); // NOI18N
        open.setText("    Open");
        open.setToolTipText("");
        open.setName(""); // NOI18N
        open.setPreferredSize(new java.awt.Dimension(135, 30));
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu1.add(open);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-close-window-22.png"))); // NOI18N
        jMenuItem2.setText("    Close");
        jMenuItem2.setName(""); // NOI18N
        jMenuItem2.setPreferredSize(new java.awt.Dimension(135, 30));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Help");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        aboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        aboutUsMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-people-22.png"))); // NOI18N
        aboutUsMenuItem.setText("About Us");
        aboutUsMenuItem.setPreferredSize(new java.awt.Dimension(133, 30));
        aboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutUsMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(aboutUsMenuItem);

        helpContent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        helpContent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-help-22.png"))); // NOI18N
        helpContent.setText("Help ");
        helpContent.setPreferredSize(new java.awt.Dimension(161, 30));
        helpContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpContentActionPerformed(evt);
            }
        });
        jMenu2.add(helpContent);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mediumActionPerformed

    //Resize the image.
    //Here we pass the path of the particular image.
    public ImageIcon ResizeImage(String imagePath, byte[] pic) {
        ImageIcon myImage = null;
        //if the imagePath is not null it will create an object of imageIcon passing the imagePath.
        if (imagePath != null) {

            myImage = new ImageIcon(imagePath);

        } //If the image path is  null it will create an object of imageIcon passing the array object of type byte.
        //Here pic is null which means no image is set in the label and server.
        else {
            myImage = new ImageIcon(pic);
        }
        //returns the icon image.
        Image img = myImage.getImage();
        //giving the proper height and width acccording to the label for the image.
        Image img2 = img.getScaledInstance(label_image.getWidth(), label_image.getHeight(), Image.SCALE_SMOOTH);
        //After giving the proper image and height we finally create the ImageIcon which later is returned
        ImageIcon image = new ImageIcon(img2);
        return image;
    }

    //method for validation
    public boolean verifText() {
        if (date.getText().equals("") || date.getText().equals("") || date.getText().equals("") || price.getText().equals("") || desc.getText().equals("")
                || label_image.getIcon() == null) {

            return false;
        } else {
            return true;
        }
    }

    /*
    When the image choose button is clicked first JFileChooser object is made,then current directory is set 
    after which proper extension is given to the choosen file.we add the extension to the filechooser Object.
    After then call the showSave Dialog method which Pops up a "Save File" file chooser dialog.
    the return state of the file chooser  popsdown the :
    *JFileChooser.CANCEL_OPTION
    *JFileChooser.APPROVE_OPTION
 
     */
    private void chooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageActionPerformed
        //Creating the object of JFileChooser.
        JFileChooser fileChooser = new JFileChooser();
        //using the JFileChooser object to set the current directory
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "NetBeansProjects\\CAD_IS"));
        //setting the file extension.
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "gif", "png");
        //putting the FileNameExtension object in the JFileChooser object.
        fileChooser.addChoosableFileFilter(filter);

        /*   
        Pops up a "Save File" file chooser dialog. 
         The return state of the file chooser on popdown:
        JFileChooser.CANCEL_OPTION
        JFileChooser.APPROVE_OPTION
         */
        int result = fileChooser.showSaveDialog(null);
        //Here APPROVE_OPTION is a static constant whose value is 0
        if (result == JFileChooser.APPROVE_OPTION) {
            //Creating the file object using the fileChooser Object if the particular file is selected.
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            imgPath = path;
            //setting the icon in the label after resizing the image by passing the path of the particular image.
            label_image.setIcon(ResizeImage(path, null));
            //If cancel is selected below code will run,where CANCEL_OPTION is a static constant whose value is -1;
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No File Selected");
        }

    }//GEN-LAST:event_chooseImageActionPerformed


    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        AddAccessoriesForm mf = new AddAccessoriesForm();
        mf.setVisible(true);
        mf.pack();
        mf.setLocationRelativeTo(null);
        //making sure that when the add frame is closed,everything is not closed.
        mf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);


    }//GEN-LAST:event_addButtonActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        if (an2.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "No Accessory Selected");
        } else {
            int id = Integer.parseInt(an2.getText());
            //passing the user selected id in in the method
            info.insertUpdateDeleteAccessory('d', id, null, null, null, null, null, 0, null);

            //Setting the values of all the fields to null after removing a particular row.
            an2.setText("");
            an1.setText("");
            date.setText("");
            price.setText("");
            desc.setText("");
            label_image.setIcon(null);
            buttonGroup1.clearSelection();
            category1.setSelectedIndex(0);

        }
    }//GEN-LAST:event_removeActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(an2.getText());
            String accessoryName = an1.getText();
            String category = String.valueOf(category1.getItemAt(category1.getSelectedIndex()));
            String range = "Low";
            if (medium.isSelected()) {
                range = "Medium";
            } else if (high.isSelected()) {
                range = "High";
            }

            String adate = date.getText();
            int price1 = Integer.parseInt(price.getText());
            String descrip = desc.getText();

            //To Update the image on the server.
            try {
                Connection con = MyConnection.getConnection();
                Statement st = con.createStatement();
                //executeQuery is the method which is written when we want to fetch the datas from the table of the server.

                ResultSet rs = st.executeQuery(" SELECT `image` FROM `accessory` ");

                while (rs.next()) {
                    try {
                        InputStream img = new FileInputStream(new File(imgPath));
                        if (!img.equals(0)) {
                            if (rs.getBlob(1) != null) {
                                if (verifText()) {
                                    CAD_Info info = new CAD_Info();

                                    //for the updation of values in the server.
                                    info.insertUpdateDeleteAccessory('u', id, accessoryName, category, range, img, adate, price1, descrip);
                                    break;
                                }
                            }
                        }
                    } catch (Exception ex) {
                        if (verifText()) {
                            CAD_Info info = new CAD_Info();

                            //for the updation of values in the server.
                            info.insertUpdateDeleteAccessory1('u', id, accessoryName, category, range, adate, price1, descrip);
                            break;
                        }

                    }

                }
            } catch (Exception ex) {
                Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);

            }
            //The below codes are done to update the datas on the table.
            try {
                int i = table.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                if (i >= 0) {
                    //Updating the values in the UI table.
                    //Here i is the rowindex of each row in the table and the later part is the column index. 
                    //  JOptionPane.showMessageDialog(null, "Accessory data Updated on UI");
                    model.setValueAt(an2.getText(), i, 0);
                    model.setValueAt(an1.getText(), i, 1);
                    //Here we are setting  the updated comboBox value in the table.
                    model.setValueAt(category1.getItemAt(category1.getSelectedIndex()), i, 2);
                    model.setValueAt(range, i, 3);
                    model.setValueAt(date.getText(), i, 4);
                    model.setValueAt(price.getText(), i, 5);
                    model.setValueAt(desc.getText(), i, 6);

                } else {
                    JOptionPane.showMessageDialog(null, "One or more field is empty");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "One or more field is empty");
        }


    }//GEN-LAST:event_editButtonActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // setting the value on each textField on Clicking the particular row of the table.
        int rowIndex = table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        low.setSelected(false);
        medium.setSelected(false);
        high.setSelected(false);
        if (model.getValueAt(rowIndex, 3).toString().equals("Low")) {
            low.setSelected(true);

        } else if (model.getValueAt(rowIndex, 3).toString().equals("Medium")) {
            medium.setSelected(true);

        } else if (model.getValueAt(rowIndex, 3).toString().equals("High")) {
            high.setSelected(true);

        }
        if (model.getValueAt(rowIndex, 2).toString().equals("Comfort")) {
            category1.setSelectedIndex(0);
        } else if (model.getValueAt(rowIndex, 2).toString().equals("Ambience")) {
            category1.setSelectedIndex(1);
        } else if (model.getValueAt(rowIndex, 2).toString().equals("Media")) {
            category1.setSelectedIndex(2);
        }
        an1.setText(model.getValueAt(rowIndex, 1).toString());
        an2.setText(model.getValueAt(rowIndex, 0).toString());
        date.setText(model.getValueAt(rowIndex, 4).toString());
        price.setText(model.getValueAt(rowIndex, 5).toString());
        desc.setText(model.getValueAt(rowIndex, 6).toString());
        String addDate = date.getText();

        try {
            //setting the image in the image label on clicking the particular row of the table.
            label_image.setIcon(ResizeImage(null, CAD_Info.getItemList().get(rowIndex).getImage()));

        } catch (Exception ex) {
            Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tableMouseClicked

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tableKeyReleased

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed

        //Creating an object of JFileChooser 
        JFileChooser chooser = new JFileChooser();
        /*
         using the JFileChooser object to   
         Pop up a "Save File" file chooser dialog. 
         The return state of the file chooser on popdown:
         JFileChooser.CANCEL_OPTION
         JFileChooser.APPROVE_OPTION
         */

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            //creating the file object
            File f = chooser.getSelectedFile();
            String fileName = f.getAbsolutePath();
            Runtime open = Runtime.getRuntime();
            try {
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + fileName);
            } catch (IOException ex) {
                Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No file was Selected!", "Message", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_openActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void chooseImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseImageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseImageMouseClicked

    private void aboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutUsMenuItemActionPerformed
        AboutUs abs = new AboutUs();
        abs.setVisible(true);
        abs.pack();
        abs.setLocationRelativeTo(null);
        abs.setDefaultCloseOperation(DISPOSE_ON_CLOSE);


    }//GEN-LAST:event_aboutUsMenuItemActionPerformed

    private void helpContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpContentActionPerformed
        JOptionPane.showMessageDialog(this, "This is a CarAccessory information system which \n is connected with "
                + "the MYSQL server."
                + "It allows to\n add,remove and update the accessories of the car. \n",
                "Help Contents",
                JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_helpContentActionPerformed

    private void highActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_highActionPerformed

    private void homeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuItemActionPerformed
        MainForm mf = new MainForm();
        mf.setVisible(true);
        mf.pack();
        //Make the MainForm frame display in the center of  the screen.
        mf.setLocationRelativeTo(null);
        MainForm.welcome.setText("Welcome " + "          |          |");
        try {
            //Calling the countData function to display the total number of accessories.
            MainForm.totalAccesories.setText("Total Accessories : " + Integer.toString(MyFunction.countData("accessory")));
        } catch (Exception ex) {
            Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_homeMenuItemActionPerformed

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped
        price_label.setVisible(false);
        //The below code runs when the user input characters instead of digits.
        if (!Character.isDigit(evt.getKeyChar())) {
            price_label.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_priceKeyTyped

    private void searchPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPriceKeyTyped

    private void openRecieptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openRecieptButtonActionPerformed
        try {
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + "reciept.txt");
        } catch (IOException ex) {
            Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_openRecieptButtonActionPerformed


    private void searchByPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceButtonActionPerformed
//        int rows = table.getRowCount();
//        int searchIndex = 5;
//        int no = 1;
//        String search = searchPrice.getText();
//        if (!"".equals(search) && rows != 0) {
//
//            int searchItem = Integer.parseInt(searchPrice.getText());
//
//            int data[] = new int[rows];
//
//            for (int i = 0; i < rows; i++) {
//                data[i] = Integer.parseInt(table.getValueAt(i, searchIndex).toString());
//            }
//
//            //  System.out.println(Arrays.toString(data));
//            int searchResult = binarySearch(data, searchItem);
//
//            //  System.out.println(searchResult);
//            String itemName = "";
//            if (searchResult != -1) {
//                for (int i = 0; i < rows; i++) {
//                    if (Integer.parseInt(table.getValueAt(i, searchIndex).toString()) == searchResult) {
//                        int itemIndex = 1;
//                        itemName += no + "." + ((String) table.getValueAt(i, itemIndex)) + "\n";
//                        no++;
//                    }
//                }
//                if (!"".equals(itemName)) {
//                    JOptionPane.showMessageDialog(this, itemName, (no - 1) + " Results Found : ", JOptionPane.INFORMATION_MESSAGE);
//                }
//
//            } else {
//                JOptionPane.showMessageDialog(this, "Search Not Found!", "Message", JOptionPane.WARNING_MESSAGE);
//            }
//        } else {
//            JOptionPane.showMessageDialog(this, "Search Not Found!", "Message", JOptionPane.WARNING_MESSAGE);
//        }
        int rows = table.getRowCount();
        int searchIndex = 5;
        String search = searchPrice.getText();
        if (!"".equals(search) && rows != 0) {

            int searchItem = Integer.parseInt(searchPrice.getText());

            int data[] = new int[rows];

            for (int i = 0; i < rows; i++) {
                data[i] = Integer.parseInt(table.getValueAt(i, searchIndex).toString());
            }

            System.out.println(Arrays.toString(data));
            int searchResult = binarySearch(data, searchItem);

            System.out.println(searchResult);

            if (searchResult != -1) {
                for (int i = 0; i < rows; i++) {
                    if (Integer.parseInt(table.getValueAt(i, searchIndex).toString()) == searchResult) {
                        int itemIndex = 1;
                        String itemName = table.getValueAt(i, itemIndex).toString();
                        JOptionPane.showMessageDialog(this, "Search Found\nPrice: " + searchItem + "\nItem: " + itemName, "Message", JOptionPane.INFORMATION_MESSAGE);
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Search Not Found!", "Message", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Search Not Found!", "Message", JOptionPane.WARNING_MESSAGE);
        }
     

    }//GEN-LAST:event_searchByPriceButtonActionPerformed

    private void searchByCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCategoryButtonActionPerformed
        
        String categoryItems = category123.getSelectedItem().toString();
        int searchIndex = 2;
        int rows = table.getRowCount();
        int no = 1;
        String displayName = "";
        for (int i = 0; i < rows; i++) {
            if ((table.getValueAt(i, searchIndex).toString()).equals(categoryItems)) {
                int itemIndex = 1;
                displayName += no + "." + ((String) table.getValueAt(i, itemIndex)) + "\n";
                no++;
            }
        }

        if (!"".equals(displayName)) {
            JOptionPane.showMessageDialog(this, displayName, (no - 1) + " Items From " + categoryItems, JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No Items Related to Category: " + categoryItems, "Message", JOptionPane.INFORMATION_MESSAGE);
        }
          
        table.setModel(new DefaultTableModel(null, new Object[]{"Id", "Accessory Name", "Category", "Range", "Add Date", "Price",
             "Description"}));
        info.fillAccessoryJTable1(table, categoryItems);
        
   

    }//GEN-LAST:event_searchByCategoryButtonActionPerformed

    private void searchPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPriceActionPerformed

    private void an2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_an2KeyTyped

        id_label2.setVisible(false);
        if (!Character.isDigit(evt.getKeyChar())) {
            id_label2.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_an2KeyTyped


    private void clearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllActionPerformed
        try {
            int yesOrNo = JOptionPane.showConfirmDialog(null, "Really want to delete all the items",
                    "Delete  Accessories", JOptionPane.OK_CANCEL_OPTION, 2);
            if (yesOrNo == JOptionPane.OK_OPTION) {
                Connection con = MyConnection.getConnection();
             PreparedStatement pst = con.prepareStatement("DELETE FROM `accessory`");
                JOptionPane.showMessageDialog(null, "All Accessory datas Deleted");
                //It clears all the rows from the table.
                table.setModel(new DefaultTableModel(null, new Object[]{"Id", "Accessory Name", "Category", "Range",
                   "Add Date", "Price", "Description"}));
            //  MainForm.totalAccesories.setText("Total Accessories : " + MyFunction.countData("accessory"));
           
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageAccessories.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_clearAllActionPerformed

    private void searchPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceKeyReleased

        table.setModel(new DefaultTableModel(null, new Object[]{"Id", "Accessory Name", "Category", "Range", "Add Date", "Price",
             "Description"}));
        info.fillAccessoryJTable(table, searchPrice.getText());

    }//GEN-LAST:event_searchPriceKeyReleased

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
         
        table.setModel(new DefaultTableModel(null, new Object[]{"Id", "Accessory Name", "Category", "Range",
         "Add Date", "Price", "Description"}));
        int rows = table.getRowCount(); 
         if (rows<=0){
            info.fillAccessoryJTable(table, "");
         }

    }//GEN-LAST:event_loadActionPerformed
    private int binarySearch(int[] a, int x) {
        Arrays.sort(a);
        //  System.out.println(Arrays.toString(a));
        int size = a.length;
        int lowestIndex = 0;
        int highestIndex = size - 1;

        while (lowestIndex <= highestIndex) {
            int mid = (lowestIndex +highestIndex ) / 2;
            if (a[mid] == x) {
                return a[mid];
            } else if (x > a[mid]) {
                lowestIndex = mid + 1;
            } else {
                highestIndex = mid - 1;
            }
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAccessories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAccessories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAccessories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAccessories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAccessories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutUsMenuItem;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField an1;
    private javax.swing.JTextField an2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> category1;
    private javax.swing.JComboBox<String> category123;
    private javax.swing.JButton chooseImage;
    private javax.swing.JButton clearAll;
    private javax.swing.JTextField date;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private javax.swing.JTextField desc;
    private javax.swing.JButton editButton;
    private javax.swing.JMenuItem helpContent;
    private javax.swing.JRadioButton high;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JLabel id_label1;
    private javax.swing.JLabel id_label2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_image;
    private javax.swing.JButton load;
    private javax.swing.JRadioButton low;
    private javax.swing.JRadioButton medium;
    private javax.swing.JMenuItem open;
    private javax.swing.JButton openRecieptButton;
    private javax.swing.JTextField price;
    private javax.swing.JLabel price_label;
    private javax.swing.JButton remove;
    private javax.swing.JButton searchByCategoryButton;
    private javax.swing.JButton searchByPriceButton;
    private javax.swing.JTextField searchPrice;
    public static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
